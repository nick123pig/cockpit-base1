name: CI

on:
  push:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      VERSION: 323
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Download cockpit tarball
        run: |
          TARBALL=cockpit-$VERSION.tar.xz
          URL=https://github.com/cockpit-project/cockpit/releases/download/$VERSION/$TARBALL
          wget $URL

      - name: Extract tarball
        run: |
          TARBALL=cockpit-$VERSION.tar.xz
          EXTRACT_DIR=build
          mkdir -p $EXTRACT_DIR
          tar -xf $TARBALL --strip-components=1 -C $EXTRACT_DIR

      - name: Patch build.js
        run: |
          sed -i 's/outdir: "\.\/dist",/outdir: ".\/dist", format: "esm",/' build/build.js

      - name: Install npm dependencies
        run: |
          cd build && npm ci

      - name: Install TypeScript
        run: |
          npm install -g typescript

      - name: Build cockpit
        run: |
          cd build && node build.js

      - name: Prepare output directory
        run: |
          mkdir -p cockpit
          cp -r build/dist/base1/* cockpit
          echo "{\"name\": \"cockpit-base1\", \"version\": \"$VERSION.0.0\", \"main\": \"index.mjs\", \"type\": \"module\"}" > cockpit/package.json
          cat cockpit/cockpit.js >> cockpit/index.mjs
          printf "\n\nexport default cockpit;" >> cockpit/index.mjs
          echo 'declare interface Window { debugging?: any }' | cat - build/pkg/lib/cockpit-dark-theme.ts > cockpit/cockpit-dark-theme.ts
          tsc cockpit/cockpit-dark-theme.ts --outDir cockpit --declaration false --esModuleInterop
          rm -f cockpit/cockpit-dark-theme.js.map
          rm -f cockpit/cockpit-dark-theme.ts

      - name: Publish to npm
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        working-directory: cockpit
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm publish --access public

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cockpit-base1-artifact
          path: cockpit/

      - name: Clean up build artifacts
        run: |
          rm -f cockpit-$VERSION.tar.xz
          rm -rf build
